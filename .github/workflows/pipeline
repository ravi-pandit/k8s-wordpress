name: Deploy to EKS
on:
  push:
    branches: [ main ]

env:
  ECR_REGISTRY: 187451058634.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPOSITORY: wordpress

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - uses: actions/checkout@v2

      # Set up the AWS CLI
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Install kubectl and the AWS IAM Authenticator
      - name: Install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
      - name: Install AWS IAM Authenticator
        run: |
          curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-1.amazonaws.com/1.20.8/2022-12-01/bin/linux/amd64/aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      
      # Login into AWS ECR
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.ECR_REGISTRY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Build docker image
      - name: Build Docker image
        id: build-image
        run: |
          cd fpm
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
          docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

      # Push docker image
      - name: Push Docker image to ECR
        id: push-image
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

      # # Build Image with Tag and Push Image to Amazon ECR
      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: ${{ steps.vars.outputs.tag }}
      #   run: |
      #     # echo "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      #     cd fpm 
      #     docker build -t 187451058634.dkr.ecr.ap-south-1.amazonaws.com/wordpress:latest .
      #     docker push 187451058634.dkr.ecr.ap-south-1.amazonaws.com/wordpress:latest
      #     # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # Set up the kubeconfig file
      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name eks-demo
          
      # # Build and push the Docker image
      # - name: Build and push image
      #   run: |
      #     # Replace these values with your own
      #     IMAGE_REPO=187451058634.dkr.ecr.ap-south-1.amazonaws.com/wordpress
      #     IMAGE_TAG=latest

        # # Build the Docker image
        # docker build -t $IMAGE_REPO:$IMAGE_TAG .
        # # Push the image to a registry
        # docker push $IMAGE_REPO:$IMAGE_TAG

      # Deploy the application to EKS
      - name: Deploy to EKS
        run: |
          # Replace these values with your own
          IMAGE_REPO=187451058634.dkr.ecr.ap-south-1.amazonaws.com/wordpress
          IMAGE_TAG=${{ github.sha }}
          CLUSTER_NAME=eks-demo
          NAMESPACE=development
          DEPLOYMENT_NAME=wordpress-site

          echo "$DEPLOYMENT_NAME"
          echo "$CLUSTER_NAME"
          echo "$NAMESPACE"

          # Set the current context to the EKS cluster
          kubectl config get-contexts  

          # kubectl config use-context $CLUSTER_NAME
          # Update the deployment with the new image

          kubectl set image deployment/$DEPLOYMENT_NAME app=$IMAGE_REPO:$IMAGE_TAG --namespace=$NAMESPACE
          
          #kubectl set image deployment/wordpress-site app=wordpress:php8.1-fpm --namespace=development
          #kubectl set image deployment/wordpress-site rrpnarola/wordpress:php7.4-fpm --namespace=development
